{"version":3,"sources":["all.js"],"names":["window","app","$","setTimeout","fadeOut","TodoModel","Backbone","Model","extend","defaults","title","isCompleted","toggle","this","save","get","TodoCollection","Collection","model","localStorage","LocalStorage","done","where","remaining","todos","TodoItemView","View","tagName","className","events","click .destroy","click input.toggle","dblclick .view label","keypress .edit","blur .edit","destroyModel","destroy","removeView","$el","slideUp","remove","bind","toggleTodo","updateTitleTodo","val","trim","removeClass","editing","addClass","focus","endEdit","event","which","keyCode","toggleView","v","prop","toggleClass","updateTitleView","html","hideView","isHidden","slideDown","todoFilter","initialize","listenTo","template","_","render","toJSON","TodoAppView","el","statsTemplate","keypress input.new-todo","click .clear-completed","click .toggle-all","toggleAll","each","item","clearCompleted","invoke","newTodo","$input","m","create","trigger","loadTodos","loadTodo","todo","itemview","$t","hide","appendTo","$todoList","length","$main","show","$footer","find","filter","filterOne","filterAll","fetch","reset","TodoRouter","Router","routes","*filter","do","param","router","history","start"],"mappings":"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","file":"all.min.js","sourcesContent":["//定义一个全局的app对象，存储backbone中定义的组件（model,views..)。\r\nwindow.app = {};\r\n//页面加载完毕，清除加载层\r\n$(function($){\r\n\tsetTimeout(function(){\r\n\t\t$('#load').fadeOut();\r\n\t}, 600);\r\n});\n(function (){\r\n\tapp.TodoModel = Backbone.Model.extend({\r\n\t\tdefaults: {\r\n\t\t\ttitle: \"\",\r\n\t\t\tisCompleted: false\r\n\t\t},\r\n\t\t\r\n\t\ttoggle: function (){\r\n\t\t\tthis.save({isCompleted: !this.get('isCompleted')});\r\n\t\t},\r\n\t});\r\n//\tconsole.log(new app.TodoModel({title: \"aaa\"}).toJSON());\r\n})();\r\n\n(function (){\r\n\tapp.TodoCollection = Backbone.Collection.extend({\r\n\t\t//此属性来指定集合中包含的模型类\r\n\t\tmodel: app.TodoModel,\r\n\t\t\r\n\t\t//设置集合数据的来源，如果一个url,那么代表通过ajax发送请求获取数据\r\n//\t\turl:'todos.json',\r\n\t\t\r\n//\t\t设置存储器（采用h5 localStorage\r\n\t\tlocalStorage: new Backbone.LocalStorage('todos-backbone'),\r\n\t\t\r\n\t\tdone: function() {\r\n\t    \treturn this.where({isCompleted: true});\r\n\t\t},\r\n \r\n\t    remaining: function() {\r\n\t      return this.where({isCompleted: false});\r\n\t    },\r\n\t});\r\n\t\r\n//使用集合\r\n\tapp.todos = new app.TodoCollection();\r\n//\tapp.todos.create({\"id\": 1, \"title\": \"~~~~~~~~~~~~~~~~~~~~~~~~~~\"});\r\n//\tapp.todos.fetch({reset: true});\r\n//\tapp.todos.each(function(item, index) {\r\n//\t\tconsole.log(item.toJSON(), index);\t\r\n//\t});\r\n})();\r\n\n(function(){\r\n\t//创建一个备忘录列表项的视图组件\r\n\tapp.TodoItemView = Backbone.View.extend({\r\n\t\ttagName: \"li\",\r\n\r\n\t\tclassName: \"todo-item\",\r\n\t\t\r\n\t\tevents: {\r\n\t\t   \"click .destroy\": \"destroyModel\",\r\n\t\t   \"click input.toggle\": \"toggleTodo\",\r\n\t\t   \"dblclick .view label\": \"editing\",\r\n\t\t   \"keypress .edit\": \"endEdit\",\r\n\t\t   \"blur .edit\": \"updateTitleTodo\", \t\r\n\t\t},\r\n\t\tdestroyModel: function() {\r\n\t\t\tthis.model.destroy();\r\n\t\t},\r\n\t\tremoveView: function(){\r\n\t\t\tthis.$el.slideUp('fast', function (){\r\n\t\t\t\tthis.$el.remove();\r\n\t\t\t}.bind(this));\r\n\t\t},\r\n\t\ttoggleTodo: function (){\r\n\t\t\tthis.model.toggle();\r\n\t\t},\r\n\t\tupdateTitleTodo: function (){\r\n\t\t\tvar val = this.$('.edit').val().trim();\r\n\t\t\tif(val) {\r\n\t\t\t\tthis.model.save({title: val});\r\n\t\t\t}\r\n\t\t\tthis.$el.removeClass('editing');\r\n\t\t},\r\n\t\tediting: function (){\r\n\t\t\tthis.$el.addClass('editing');\r\n\t\t\tthis.$('.edit').focus();\r\n\t\t},\r\n\t\tendEdit: function (){\r\n\t\t\tif ((event.which && event.which == 13) || (event.keyCode && event.keyCode == 13)) {\r\n\t\t\t\tthis.updateTitleTodo();\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoggleView: function (){\r\n\t\t\tvar v = this.model.get('isCompleted');\r\n\t\t\tthis.$('.toggle').prop('checked', v);\r\n\t\t\tthis.$el.toggleClass('completed', v);\r\n\t\t},\r\n\t\tupdateTitleView: function (){\r\n\t\t\tvar val = this.model.get('title');\r\n\t\t\tthis.$('label').html(val);\r\n\t\t},\r\n\t\thideView: function(){\r\n\t\t\tthis.isHidden()?\r\n\t\t\t\tthis.$el.slideUp('fast') : this.$el.slideDown('fast');\t\t\t\t\r\n\t\t},\r\n\t\tisHidden:function(){\r\n\t\t\t return this.model.get(\"isCompleted\") ? app.todoFilter == \"active\" : app.todoFilter == \"completed\"\r\n\t\t},\r\n\t\tinitialize: function() {\r\n\t\t\t//先删模型， 模型删除后， 触发destroy事件， 再删除视图。\r\n\t\t\t//保证了模型一定被删除，才改动视图\r\n\t\t\tthis.listenTo(this.model, 'destroy', this.removeView);\r\n\t\t\tthis.listenTo(this.model, 'change:isCompleted', this.toggleView);\r\n\t\t\tthis.listenTo(this.model, 'change:title', this.updateTitleView);\r\n\t\t\tthis.listenTo(this.model, 'hide', this.hideView);\r\n\t\t},\r\n\t\t\r\n\t\ttemplate: _.template($('#item_template').html()),\r\n\t\trender: function() {\r\n//\t\t\tthis.model由外部传入（创建视图对象时）\r\n\t\t\tthis.$el.html(this.template(this.model.toJSON()));\r\n\t\t\tthis.$el.toggleClass('completed', this.model.get('isCompleted'));\r\n\t\t\treturn this;\r\n\t\t}\r\n\t});\r\n\t\r\n\t//TodoItem视图的使用\r\n//\tvar m = new app.TodoModel({title:\"eat rise\"});\r\n//\tvar v = new app.TodoItemView({model: m});\r\n//\tv.render().$el.appendTo(\"ul.todo-list\");\r\n})();\r\n\n(function(){\r\n\t\r\n\t//视图其实就是一组（一个）html标签\r\n\t//定义应用的主视图类\r\n\t//一个视图组件:\r\n\t//\t内容定义有两种方式：\r\n\t//\t\t\t1、el属性直接与页面中已有的标签关联。\r\n\t//\t\t\t2、tagName,className,id...定义一个标签在内存中。（不会添加到页面中。）\r\n\tapp.TodoAppView = Backbone.View.extend({\r\n\t\tel: \".todoapp\",\r\n\t\tstatsTemplate: _.template($('#stats_template').html()),\r\n\t\tevents: {\r\n\t\t\t//按下回车新建一个模型，然后添加到集合中\r\n\t\t\t\"keypress input.new-todo\": \"newTodo\",\r\n\t\t\t\"click .clear-completed\": \"clearCompleted\",\r\n\t\t\t\"click .toggle-all\": \"toggleAll\",\r\n\t\t},\r\n\t\ttoggleAll: function(){\r\n\t\t\tapp.todos.each(function(item) {\r\n\t\t\t\titem.toggle();\r\n\t\t\t});\r\n\t\t},\r\n\t\tclearCompleted: function(){\r\n\t\t\t_.invoke(app.todos.done(), \"destroy\");\r\n\t\t},\r\n\t\tnewTodo: function (event){\r\n\t\t\tvar val = this.$input.val().trim();\r\n\t\t\tif (((event.which && event.which == 13) || (event.keyCode && event.keyCode == 13)) && val) {\r\n\t\t\t\tvar m = new app.TodoModel({title: val});\r\n\t\t\t\tapp.todos.create(m);\r\n\t\t\t\tapp.todos.trigger('addOne', m);\r\n\t\t\t\tthis.$input.val('');\r\n\t\t\t}\r\n\t\t},\r\n\t\tloadTodos: function () {\r\n\t\t\tapp.todos.each(this.loadTodo, this);\r\n\t\t},\r\n\t\tloadTodo: function (todo) {\r\n\t\t\tvar itemview = new app.TodoItemView({model: todo});\r\n\t\t\tvar $t = itemview.render().$el;\r\n\t\t\t$t.hide();\r\n\t\t\t$t.appendTo(this.$todoList);\r\n\t\t\t$t.slideDown();\r\n\t\t},\r\n\t\r\n//\t\tall: function(event){\r\n//\t\t\tconsole.log(event);\r\n//\t\t},\r\n\t\trender: function(){\r\n\t\t\tvar done = app.todos.done().length;\r\n\t\t\tvar remaining = app.todos.remaining().length;\r\n\t\t\tif (app.todos.length) {\r\n        \t\tthis.$main.show();\r\n\t\t\t    this.$footer.slideDown();\r\n\t\t\t    this.$footer.html(this.statsTemplate({done: done, remaining: remaining}));\r\n\t\t\t    this.$footer.find('a').removeClass('selected')\r\n\t\t\t    .filter(\"[href='#\"+app.todoFilter+\"']\").addClass(\"selected\");\r\n\t\t\t} else {\r\n\t\t\t    this.$main.slideUp('fast');\r\n\t\t\t    this.$footer.slideUp();\r\n\t\t\t}\r\n\t\t},\r\n\t\tfilterOne: function(todo){\r\n\t\t\ttodo.trigger('hide');\r\n\t\t},\r\n\t\tfilterAll: function(){\r\n\t\t\tapp.todos.each(this.filterOne);\r\n\t\t},\r\n\t\tinitialize: function (){\r\n\t\t\tthis.$todoList = this.$('.todo-list');\r\n\t\t\tthis.$input = this.$('input');\r\n\t\t\tthis.$footer = this.$('.footer');\r\n\t\t\tthis.$main = this.$('.main');\r\n\t\t\t\r\n\t\t\t//页面第一次加载时，把数据模型创建成模型，ITEM视图，然后添加到APP视图中\r\n\t\t\tthis.listenTo(app.todos, 'reset', this.loadTodos);\r\n\t\t\t//新加TODO时,把数据模型创建成模型，ITEM视图，然后添加到APP视图中\r\n\t\t\tthis.listenTo(app.todos, 'addOne', this.loadTodo);\r\n\t\t\tthis.listenTo(app.todos, 'filter', this.filterAll);\r\n\t\t\tthis.listenTo(app.todos, 'all', this.render);\r\n\t\t\t\r\n\t\t\tapp.todos.fetch({reset: true});\r\n\t\t},\r\n\t});\r\n\t\r\n\t//创建视图对象，只有创建视图对象的时候，才会和页面中元素关联。\r\n\tnew app.TodoAppView();\r\n})();\r\n\n(function() {\r\n\tapp.TodoRouter = Backbone.Router.extend({\r\n\t\troutes: {\r\n\t\t\t//匹配任何描\r\n\t    \t\"*filter\": \"do\",\r\n\t  \t},\r\n\t\tdo: function(param) {\r\n\t\t\t//记录描， 用于itemview\r\n\t\t\tapp.todoFilter = param || '';\r\n\t\t\tapp.todos.trigger('filter');\r\n\t\t}\r\n\t});\r\n\t\r\n\tapp.router = new app.TodoRouter();\r\n//\tapp.router.on('route:do', function(){\r\n//\t\tconsole.log('##');\r\n//\t});\r\n\tBackbone.history.start();\r\n})();\r\n"]}